pipeline{
    agent { label 'aaa-jenkins2' }
    environment {
        BAMS_CREDS = credentials('a5e809ef-6598-4f88-a765-88b4b3387cc5')
		gitCredsId = "a5e809ef-6598-4f88-a765-88b4b3387cc5"
		gitPushURL = "git.sami.int.thomsonreuters.com/aaa/aaa-api-template"
		gitRepoURL = "https://${gitPushURL}"
		GIT_CREDS = credentials('CHRIS_BAMS')

    }
    stages{
        stage("Download Build from BAMS"){
            steps{
                script{
                    env.VERSIONNUMBER = env.BUILD_TAG.split('/')[1]
                }
                bat "mkdir template-api-deployment"
                bat "mkdir template-api-deployment\\terraform"
                bat "mkdir template-api-deployment\\Refinitiv.Aaa.GuissApi.PostmanTests"
                rtServer id: 'BAMS', url: 'https://bams-aws.refinitiv.com/artifactory', username: BAMS_CREDS_USR, password: BAMS_CREDS_PSW
                rtDownload(
                    serverId: 'BAMS',
                    spec:
                        """{
                                "files": [
                                    {
                                        "pattern": "default.generic.cloud/aaa/aws/templateapi/*/template-api-deployment-${env.VERSIONNUMBER}/Refinitiv.Aaa.GuissApi-${env.VERSIONNUMBER}.zip",
                                        "target": "./template-api-deployment/Refinitiv.Aaa.GuissApi-${env.VERSIONNUMBER}.zip",
                                        "flat": true
                                    },
                                    {
                                        "pattern": "default.generic.cloud/aaa/aws/templateapi/*/template-api-deployment-${env.VERSIONNUMBER}/Refinitiv.Aaa.GuissApi-${env.VERSIONNUMBER}-terraform.zip",
                                        "target": "./terraform.zip",
                                        "flat": true
                                    },
                                    {
                                        "pattern": "default.generic.cloud/aaa/aws/templateapi/*/Refinitiv.Aaa.GuissApi.PostmanTests-${env.VERSIONNUMBER}.zip",
                                        "target": "./Refinitiv.Aaa.GuissApi.PostmanTests.zip",
                                        "flat": true
                                    }
                                ]

                        }"""
                )
                unzip zipFile: "terraform.zip", dir: "template-api-deployment/terraform"
                unzip zipFile: "Refinitiv.Aaa.GuissApi.PostmanTests.zip", dir: "template-api-deployment/Refinitiv.Aaa.GuissApi.PostmanTests"
            }
        }
        stage("Upload deployment artifacts to AWS") {
            steps{
                withAWS(region: "eu-west-1") {
                    bat "aws s3 cp template-api-deployment s3://a206104-aaa-deployment-artifacts/services/apis/template-api/template-api-deployment-${env.VERSIONNUMBER}/ --recursive"
                }
            }
        }
        stage("Run AWS Deployment") {
            steps{
                withAWS(region: "eu-west-1") {
                    bat "aws codebuild start-build --project-name a206104-deploy-template-api-dev --environment-variables-override name=VERSION,value=${env.VERSIONNUMBER},type=PLAINTEXT name=ENV,value=${env.ENVIRONMENT},type=PLAINTEXT name=FIRST_DEPLOYMENT,value=${env.FIRST_DEPLOYMENT},type=PLAINTEXT name=REGION,value=${env.REGION},type=PLAINTEXT"
                }
            }
        }

    }
}