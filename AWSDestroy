pipeline{
	agent { label 'aaa-jenkins2' }
    environment {
        BAMS_CREDS = credentials('a5e809ef-6598-4f88-a765-88b4b3387cc5')
		CURRENT_VERSION = '0.0.0.0'
		ACCOUNT = '653551970210'
		LAMBDA_ENV = "preprod"
    }
    stages{
        stage("Set current deployed version") {
			steps{
				script{
					if (env.ENVIRONMENT == "prod") {                                          
						ACCOUNT = '898084984877'
						LAMBDA_ENV = "prod"
					}
				}

				withAWS(
					role: "arn:aws:iam::${ACCOUNT}:role/human-role/a206104-Developer",
					region: "us-east-1"
				) {
					script{
						CURRENT_VERSION= sh(returnStdout: true, script: 'aws lambda get-function --function-name ${LAMBDA_NAME}-${LAMBDA_ENV} --qualifier current_version --region ${REGION} | jq -r \'.Configuration.Environment.Variables.Version\'').trim()
					}
				}
				
            }
        }
        stage("Download Build from BAMS"){
            steps{
				sh "echo $CURRENT_VERSION"
				sh "mkdir ${env.DIRECTORY}"
                rtServer id: 'BAMS', url: 'https://bams-aws.refinitiv.com/artifactory', username: BAMS_CREDS_USR, password: BAMS_CREDS_PSW
                rtDownload(
                    serverId: 'BAMS',
                    spec:
                        """{
                                "files": [
                                    {
                                        "pattern": "${env.BAMS_DIRECTORY}-${CURRENT_VERSION}/${env.BAMS_PACKAGE}-${CURRENT_VERSION}.zip",
                                        "target": "./${env.DIRECTORY}/${env.BAMS_PACKAGE}-${CURRENT_VERSION}.zip",
                                        "flat": true
                                    },
                                    {
                                        "pattern": "${env.BAMS_DIRECTORY}-${CURRENT_VERSION}/${env.BAMS_PACKAGE}-${CURRENT_VERSION}-terraform.zip",
                                        "target": "./terraform.zip",
                                        "flat": true
                                    }
                                ]

                        }"""
                )
                unzip zipFile: "terraform.zip", dir: "${env.DIRECTORY}/terraform"
            }
        }
        stage("Run AWS Destroy") {
			steps{
				withAWS(
					role: "arn:aws:iam::${ACCOUNT}:role/human-role/a206104-Developer",
					region: "us-east-1"
				) {
					sh '''
						cd ${DIRECTORY}/terraform/${TERRAFORM}
						/var/lib/jenkins/.tfenv/versions/0.12.12/terraform init -backend-config="../environments/${ENVIRONMENT}/region/${REGION}/infra-backend.tfvars"
						/var/lib/jenkins/.tfenv/versions/0.12.12/terraform destroy -auto-approve -var-file=\"../environments/${ENVIRONMENT}/region/${REGION}/infra-env.tfvars\" -var app_version_number=${CURRENT_VERSION}
                    '''
				}
            }
        }
    }
}